version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: bustracksv-postgres
    environment:
      POSTGRES_DB: bustracksv_db
      POSTGRES_USER: bustracksv_user
      POSTGRES_PASSWORD: bustracksv_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - bustracksv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bustracksv_user -d bustracksv_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API BusTracksV
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bustracksv-api
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=bustracksv_db
      - DATABASE_USER=bustracksv_user
      - DATABASE_PASSWORD=bustracksv_password
      - APP_HOST=0.0.0.0
      - APP_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bustracksv-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # pgAdmin para administraci√≥n de base de datos (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bustracksv-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bustracksv.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - bustracksv-network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  bustracksv-network:
    driver: bridge
